var te=Object.defineProperty;var E=(e,t)=>{for(var r in t)te(e,r,{get:t[r],enumerable:!0})};function k(e){let t=atob(e),r=t.length,n=new Uint8Array(r);for(let i=0;i<r;i++)n[i]=t.charCodeAt(i);return n}function R(e){typeof e=="string"&&(e=new TextEncoder().encode(e));let t="",r=e.byteLength;for(let n=0;n<r;n++)t+=String.fromCharCode(e[n]);return btoa(t)}var C=e=>{throw new Error("Not initialized yet")},N=typeof window>"u"&&typeof globalThis.WebSocketPair>"u";typeof Deno>"u"&&(self.Deno={args:[],build:{arch:"x86_64"},env:{get(){}}});var L=new Map,T=0;N&&(globalThis.syscall=async(e,...t)=>await new Promise((r,n)=>{T++,L.set(T,{resolve:r,reject:n}),C({type:"sys",id:T,name:e,args:t})}));function B(e,t,r){N&&(C=r,self.addEventListener("message",n=>{(async()=>{let i=n.data;switch(i.type){case"inv":{let u=e[i.name];if(!u)throw new Error(`Function not loaded: ${i.name}`);try{let d=await Promise.resolve(u(...i.args||[]));C({type:"invr",id:i.id,result:d})}catch(d){console.error("An exception was thrown as a result of invoking function",i.name,"error:",d.message),C({type:"invr",id:i.id,error:d.message})}}break;case"sysr":{let u=i.id,d=L.get(u);if(!d)throw Error("Invalid request id");L.delete(u),i.error?d.reject(new Error(i.error)):d.resolve(i.result)}break}})().catch(console.error)}),C({type:"manifest",manifest:t}))}async function re(e,t){if(typeof e!="string"){let r=new Uint8Array(await e.arrayBuffer()),n=r.length>0?R(r):void 0;t={method:e.method,headers:Object.fromEntries(e.headers.entries()),base64Body:n},e=e.url}return syscall("sandboxFetch.fetch",e,t)}globalThis.nativeFetch=globalThis.fetch;function oe(){globalThis.fetch=async function(e,t){let r=t&&t.body?R(new Uint8Array(await new Response(t.body).arrayBuffer())):void 0,n=await re(e,t&&{method:t.method,headers:t.headers,base64Body:r});return new Response(n.base64Body?k(n.base64Body):null,{status:n.status,headers:n.headers})}}N&&oe();var p={};E(p,{alert:()=>Je,configureVimMode:()=>ot,confirm:()=>Be,copyToClipboard:()=>Xe,deleteLine:()=>Ze,dispatch:()=>Fe,downloadFile:()=>Me,filterBox:()=>Ae,flashNotification:()=>Ee,fold:()=>Ke,foldAll:()=>Qe,getCurrentEditor:()=>le,getCurrentPage:()=>ne,getCurrentPageMeta:()=>ie,getCurrentPath:()=>se,getCursor:()=>pe,getRecentlyOpenedPages:()=>ae,getSelection:()=>ce,getText:()=>de,getUiOption:()=>Oe,goHistory:()=>je,hidePanel:()=>We,insertAtCursor:()=>Ue,insertAtPos:()=>Te,invokeCommand:()=>ge,moveCursor:()=>Ne,moveCursorToLine:()=>Ie,moveLineDown:()=>tt,moveLineUp:()=>et,navigate:()=>ye,newWindow:()=>Ce,openCommandPalette:()=>be,openPageNavigator:()=>he,openSearchPanel:()=>ze,openUrl:()=>Se,prompt:()=>ke,rebuildEditorState:()=>we,redo:()=>Ye,reloadConfigAndCommands:()=>ve,reloadPage:()=>Pe,reloadUI:()=>xe,replaceRange:()=>Le,save:()=>me,sendMessage:()=>nt,setSelection:()=>fe,setText:()=>ue,setUiOption:()=>qe,showPanel:()=>De,showProgress:()=>Re,toggleFold:()=>He,undo:()=>Ge,unfold:()=>_e,unfoldAll:()=>Ve,uploadFile:()=>$e,vimEx:()=>rt});typeof self>"u"&&(self={syscall:()=>{throw new Error("Not implemented here")}});function o(e,...t){return globalThis.syscall(e,...t)}function ne(){return o("editor.getCurrentPage")}function ie(){return o("editor.getCurrentPageMeta")}function se(){return o("editor.getCurrentPath")}function ae(){return o("editor.getRecentlyOpenedPages")}function le(){return o("editor.getCurrentEditor")}function de(){return o("editor.getText")}function ue(e,t=!1){return o("editor.setText",e,t)}function pe(){return o("editor.getCursor")}function ce(){return o("editor.getSelection")}function fe(e,t){return o("editor.setSelection",e,t)}function ge(e,t){return o("editor.invokeCommand",e,t)}function me(){return o("editor.save")}function ye(e,t=!1,r=!1){return o("editor.navigate",e,t,r)}function he(e="page"){return o("editor.openPageNavigator",e)}function be(){return o("editor.openCommandPalette")}function Pe(){return o("editor.reloadPage")}function xe(){return o("editor.reloadUI")}function we(){return o("editor.rebuildEditorState")}function ve(){return o("editor.reloadConfigAndCommands")}function Se(e,t=!1){return o("editor.openUrl",e,t)}function Ce(){return o("editor.newWindow")}function je(e){return o("editor.goHistory",e)}function Me(e,t){return o("editor.downloadFile",e,t)}function $e(e,t){return o("editor.uploadFile",e,t)}function Ee(e,t="info"){return o("editor.flashNotification",e,t)}function Ae(e,t,r="",n=""){return o("editor.filterBox",e,t,r,n)}function De(e,t,r,n=""){return o("editor.showPanel",e,t,r,n)}function We(e){return o("editor.hidePanel",e)}function Re(e,t){return o("editor.showProgress",e,t)}function Te(e,t){return o("editor.insertAtPos",e,t)}function Le(e,t,r){return o("editor.replaceRange",e,t,r)}function Ne(e,t=!1){return o("editor.moveCursor",e,t)}function Ie(e,t=1,r=!1){return o("editor.moveCursorToLine",e,t,r)}function Ue(e,t=!1,r=!1){return o("editor.insertAtCursor",e,t,r)}function Fe(e){return o("editor.dispatch",e)}function ke(e,t=""){return o("editor.prompt",e,t)}function Be(e){return o("editor.confirm",e)}function Je(e){return o("editor.alert",e)}function Oe(e){return o("editor.getUiOption",e)}function qe(e,t){return o("editor.setUiOption",e,t)}function Ke(){return o("editor.fold")}function _e(){return o("editor.unfold")}function He(){return o("editor.toggleFold")}function Qe(){return o("editor.foldAll")}function Ve(){return o("editor.unfoldAll")}function Ge(){return o("editor.undo")}function Ye(){return o("editor.redo")}function ze(){return o("editor.openSearchPanel")}function Xe(e){return o("editor.copyToClipboard",e)}function Ze(){return o("editor.deleteLine")}function et(){return o("editor.moveLineUp")}function tt(){return o("editor.moveLineDown")}function rt(e){return o("editor.vimEx",e)}function ot(){return o("editor.configureVimMode")}function nt(e,t){return o("editor.sendMessage",e,t)}var b={};E(b,{deleteDocument:()=>ht,deleteFile:()=>vt,deletePage:()=>pt,fileExists:()=>St,getDocumentMeta:()=>gt,getFileMeta:()=>xt,getPageMeta:()=>at,listDocuments:()=>ft,listFiles:()=>bt,listPages:()=>st,listPlugs:()=>ct,pageExists:()=>lt,readDocument:()=>mt,readFile:()=>Pt,readPage:()=>dt,writeDocument:()=>yt,writeFile:()=>wt,writePage:()=>ut});function st(){return o("space.listPages")}function at(e){return o("space.getPageMeta",e)}function lt(e){return o("space.pageExists",e)}function dt(e){return o("space.readPage",e)}function ut(e,t){return o("space.writePage",e,t)}function pt(e){return o("space.deletePage",e)}function ct(){return o("space.listPlugs")}function ft(){return o("space.listDocuments")}function gt(e){return o("space.getDocumentMeta",e)}function mt(e){return o("space.readDocument",e)}function yt(e,t){return o("space.writeDocument",e,t)}function ht(e){return o("space.deleteDocument",e)}function bt(){return o("space.listFiles")}function Pt(e){return o("space.readFile",e)}function xt(e){return o("space.getFileMeta",e)}function wt(e,t){return o("space.writeFile",e,t)}function vt(e){return o("space.deleteFile",e)}function St(e){return o("space.fileExists",e)}var A={};E(A,{getConfig:()=>Wt,getMode:()=>At,getVersion:()=>Dt,invokeCommand:()=>jt,invokeFunction:()=>Ct,listCommands:()=>Mt,listSyscalls:()=>$t,reloadPlugs:()=>Et,wipeClient:()=>Rt});function Ct(e,...t){return o("system.invokeFunction",e,...t)}function jt(e,t){return o("system.invokeCommand",e,t)}function Mt(){return o("system.listCommands")}function $t(){return o("system.listSyscalls")}function Et(){return o("system.reloadPlugs")}function At(){return o("system.getMode")}function Dt(){return o("system.getVersion")}function Wt(e,t=void 0){return o("system.getConfig",e,t)}function Rt(e=!1){return o("system.wipeClient",e)}var D={};E(D,{refreshAll:()=>It});function It(){return o("codeWidget.refreshAll")}var J="spools.json",O="jobs.json";async function q(e,t){typeof e>"u"&&(e=!0),typeof t>"u"&&(t=!0);let r=await w(),n=`<div class='silverspooler spools'>
  <table>
  <thead>
    <tr>
      <td>Brand</td>
      <td>Material</td>
      <td>Color</td>
      <td style='text-align: right;'>Left</td>
      <td style='text-align: right;'>Initial</td>
      <td style='text-align: right;'>Gross</td>
      <td>Notes</td>
      <td style='text-align: center;'></td>
    </tr>
  </thead>
  <tbody>`;n+=`<tr class='newspool'>
    <td><input type='text' required id='spoolbrand' placeholder='Brand' style='width: 100%;' /></td>
    <td><input type='text' required id='spoolmaterial' placeholder='Material' style='width: 100%;' /></td>
    <td colspan='2'><input type='color' required id='spoolcolor' style='width: 50px;' />&nbsp;<input type='checkbox' id='spooltranslucent' /> <label for='spooltranslucent' title='Translucent or transparent filament'>TL</label></td>
    <td style='text-align: right;'><input type='number' required id='spoolnetweight' style='width: 60%; text-align: right;' value='1000' title='Usually grams' /></td>
    <td style='text-align: right;'><input type='number' required id='spoolgrossweight' style='width: 60%; text-align: right; title='Usually grams' /></td>
    <td><input type='text' id='spoolnotes' style='width: 100%;' /></td>
    <td>
      <button class="sb-button-primary spooladd" data-item="newspool" onclick='javascript:document.getElementById("newspooldata").value ="br="+encodeURIComponent(document.getElementById("spoolbrand").value)+"&mt="+encodeURIComponent(document.getElementById("spoolmaterial").value)+"&cl="+encodeURIComponent(document.getElementById("spoolcolor").value)+"&tl="+encodeURIComponent(document.getElementById("spooltranslucent").checked)+"&nw="+encodeURIComponent(document.getElementById("spoolnetweight").value)+"&gw="+encodeURIComponent(document.getElementById("spoolgrossweight").value)+"&nt="+encodeURIComponent(document.getElementById("spoolnotes").value);'>Add</button>
      <input type='hidden' id='newspooldata' value='test-data' />
    </td></tr>`;let i=0,u=0,d=0,l=0;return r.forEach(a=>{if(!e||e&&!a.isRetired){n+=`<tr class='${a.isRetired?"retired":"active"}'>
      <td class="spoolbrand">${!a.isRetired&&t?`<button class="sb-button spooluse" onclick="javascript:document.getElementById('printjobfilament').value='${a.id}'; return false;" title="Select this filament for a new print job.">Use</button> `:""}${a.brand}</td>
      <td class="spoolmaterial">${a.material}</td>
      <td class="spoolcolor">${H(a.color,a.isTranslucent)}</td>`;let h=`<td class="spoolnotes">${U(a.notes)} <button class='sb-button spooleditnotes' data-item="spoolnote|${a.id}" title="Modify the notes for this spool.">Edit</button></td>`;a.isRetired?n+=`<td style='text-align: right;' class='left'>&mdash;</td><td style='text-align: right;'>&mdash;</td><td style='text-align: right;'>&mdash;</td>${h}<td></td>`:(n+=`
        <td style='text-align: right;' class="left">${a.remainingWeight}</td>
        <td style='text-align: right;' class="net"><button class="sb-button spooleditleft" data-item="spoolremaining|${a.id}" title="Modify the initial weight">Edit</button> ${a.initialNetWeight}</td>
        <td style='text-align: right;' class="gross"><button class="sb-button spooleditgross" data-item="spoolgross|${a.id}" title="Modify the gross weight">Edit</button> ${a.grossWeight}</td>
        ${h}`,n+=`<td><button class='sb-button-primary spoolretire' data-item='retire|${a.id}' title="Retire this spool.">Retire</button></td>`),n+="</tr>",i++,d+=a.initialNetWeight,l+=a.remainingWeight}else u++}),n+="</tbody>",n+=`<tfoot><tr><td colspan='3'>${i} Spools${u>0?" (+"+u+" Retired)":""}</td><td style='text-align: right;'>${l}</td><td style='text-align: right;'>${d}</td><td style='text-align: right;'></td><td></td><td></td></tr></tfoot>`,n+="</table></div>",n}async function K(e,t){t<=0&&(t=1e6);let r=await $();r.sort((s,v)=>v.date.localeCompare(s.date));let n=await w(),i=`<div class='silverspooler printjobs'>
  <table>
  <thead>
    <tr>
      <td class="jobdate">Date</td>
      <td>Description</td>
      <td colspan='2'>Spool</td>
      <td style='text-align: right;'>Weight</td>
      <td style='text-align: right;'>Duration</td>
      <td>Notes</td>
      <td></td>
    </tr>
  </thead>
  <tbody>`,u="<option value='.'>-- Select --</option>";for(let s of n)(!s.isRetired||s.isRetired&&!e)&&(u+=`<option value='${s.id}' ${typeof g<"u"&&g?.spoolId===s.id?"selected='true'":""}>${s.brand} | ${s.material} | ${Ht(s.color,s.isTranslucent)}${s.isRetired?" (Retired)":""}</option>`);i+=`<tr class='newprintjob'>
    <td class="jobdate"><input type='date' required id='printjobdate' style='width: 100%;' value="${typeof g<"u"?g?.date:rr()}" /></td>
    <td><input type='text' required id='printjobdesc' placeholder='Description' style='width: 100%;' value="${typeof g<"u"?g?.description:""}" /></td>
    <td colspan='2'><select id='printjobfilament'>${u}</select></td>
    <td style='text-align: right;'><input type='number' required id='printjobweight' style='width: 60%; text-align: right;' value="${typeof g<"u"?g?.filamentWeight:""}" /></td>
    <td style='text-align: right;'><input type='number' required id='printjobduration' style='width: 60%; text-align: right;' value="${typeof g<"u"?g?.duration:""}" title="Please enter a duration in minutes." /></td>
    <td><input type='text' id='printjobnotes' style='width: 100%;' value="${typeof g<"u"?g?.notes:""}" /></td>
    <td>
      <button class="sb-button-primary jobadd" data-item="newprintjob" onclick='javascript:document.getElementById("newprintjobdata").value ="dt="+encodeURIComponent(document.getElementById("printjobdate").value)+"&ds="+encodeURIComponent(document.getElementById("printjobdesc").value)+"&fl="+encodeURIComponent(document.getElementById("printjobfilament").value)+"&wg="+encodeURIComponent(document.getElementById("printjobweight").value)+"&dr="+encodeURIComponent(document.getElementById("printjobduration").value)+"&nt="+encodeURIComponent(document.getElementById("printjobnotes").value);'>Add</button>
      <input type='hidden' id='newprintjobdata' value='test-data' />
    </td></tr>`;let d=0,l=0,a=0,h=!1;for(let s of r)h||(i+=`<tr>
        <td class="jobdate">${new Date(s.date).toLocaleDateString()}</td>
        <td class="jobdesc">${U(s.description)}</td>
        <td class='jobspool ${s.spoolIsRetired?"retired":""}'>${s.spoolBrand} | ${s.spoolMaterial}</td>
        <td>${H(s.spoolColor,s.spoolIsTranslucent)}</td>
        <td style='text-align: right; class="jobweight"'>${s.filamentWeight}</td>
        <td style='text-align: right; class="jobduration"'>${I(s.duration)}</td>
        <td class="jobnotes">${U(s.notes)}</td>`,s.spoolIsRetired&&e?i+="<td></td>":i+=`<td><button class='sb-button-primary jobdelete' onclick='javascript:document.getElementById("printjobdate").value="${s.date.substring(0,10)}";document.getElementById("printjobdesc").value="${s.description}";document.getElementById("printjobfilament").value="${s.spoolId}";document.getElementById("printjobweight").value="${s.filamentWeight}";document.getElementById("printjobduration").value="${s.duration}";document.getElementById("printjobnotes").value="${s.notes?s.notes:""}";this.parentElement.parentElement.remove();' data-item="deletejob|${s.id}" title="Delete this print job and add it again">Delete</button></td>`,i+="</tr>"),d++,l+=s.filamentWeight,a+=s.duration,d>=t&&(h=!0);return i+="</tbody><tfoot>",i+=`<tr><td colspan='4'>${d} Print Jobs${h?" ("+(d-t)+" not shown)":""}</td><td style='text-align: right;'>${l}</td><td style='text-align: right;'>${I(a)}</td><td></td><td></td></tr>`,i+="</tfoot></table></div>",i}async function _(){let e=await $(),t={};for(let l of e)typeof t[l.spoolMaterial]>"u"&&(t[l.spoolMaterial]={weight:0,time:0,weightPerHour:0}),t[l.spoolMaterial].weight+=l.filamentWeight,t[l.spoolMaterial].time+=l.duration,t[l.spoolMaterial].weightPerHour=t[l.spoolMaterial].weight/t[l.spoolMaterial].time*60;let n=Object.entries(t).sort(([,l],[,a])=>a.weightPerHour-l.weightPerHour);t=Object.fromEntries(n);let i=`<div class='silverspooler printstats'>
  <table><thead><tr>
    <td>Material</td>
    <td style='text-align: right;'>Printed Weight</td>
    <td style='text-align: right;'>Print Time</td>
    <td style='text-align: right;'>Avg. Weight/h</td>
  </tr></thead><tbody>`,u=0,d=0;for(let l of Object.keys(t))i+=`<tr>
      <td>${l}</td>
      <td style='text-align: right;'>${t[l].weight}</td>
      <td style='text-align: right;'>${I(t[l].time)}</td>
      <td style='text-align: right;'>${Math.round((t[l].weightPerHour+Number.EPSILON)*100)/100}</td>
    </tr>`,u+=t[l].weight,d+=t[l].time;return i+=`<tfoot><tr>
      <td colspan='3'>Overall Avg. Weight/h</td>
      <td style='text-align: right;'>${Math.round((u/d*60+Number.EPSILON)*100)/100}</td>
    </tr></tfoot>`,i+="</tbody></table></div>",i}function H(e,t){let r=e+(t?"55":"FF"),n="";return t?n=`<span title='${e}/TL'><span style="background-color: ${e}; color: ${e};">&nbsp;|||&nbsp;</span><span style="background-color: transparent;">&nbsp;|||&nbsp;</span></span>`:n=`<span title='${e}'><span style="background-color: ${e}; color: ${e};">&nbsp;|||&nbsp;</span><span style="background-color: ${e}; color: ${e};">&nbsp;|||&nbsp;</span></span>`,n}function Ht(e,t){return e+(t?"/TL":"")}async function Q(e,t){m(e)&&(e.startsWith("retire|")?await Qt(e.substring(7)):e=="newspool"?await Vt(t):e.startsWith("deletejob|")?await Gt(e.substring(10)):e=="newprintjob"?await Yt(t):e.startsWith("spoolnote|")?await zt(e.substring(10)):e.startsWith("spoolremaining|")?await Xt(e.substring(15)):e.startsWith("spoolgross|")?await Zt(e.substring(11)):y("Invalid click data."))}async function V(){j=null,x=null,P=null,g=void 0,await S("SilverSpooler data refreshed.")}async function S(e){await D.refreshAll(),await p.flashNotification(e)}async function Qt(e){if(await p.confirm("Are you sure you want to retire that spool? This action cannot be undone.")){let r=await w();for(let n of r)if(n.id==e){n.isRetired=!0,await M(r),await S("Spool retired.");break}}}async function Vt(e){if(!m(e)){y("No valid arguments.");return}let t=e.split("&"),r="",n="",i="",u=!1,d=0,l=0,a="";for(let f of t){let c=f.split("=");c[1]=F(decodeURIComponent(c[1])),c[0]=="br"?r=c[1]:c[0]=="mt"?n=c[1]:c[0]=="cl"?i=c[1].toUpperCase():c[0]=="tl"?(c[1]=c[1].toLowerCase(),u=c[1]==="true"||c[1]==="1"||c[1]==="on"):c[0]=="nw"?d=Number(c[1]):c[0]=="gw"?l=Number(c[1]):c[0]=="nt"&&(a=c[1])}if(!m(r)){p.flashNotification("Please specify spool brand.");return}if(!m(n)){p.flashNotification("Please specify spool material.");return}if(!m(i)){p.flashNotification("Please specify spool color.");return}if(d<=0||d>1e4){p.flashNotification("Please specify an initial spool weight between 1 and 10000.");return}if(l<=0||l>1e4){p.flashNotification("Please specify a gross spool weight between 1 and 10000.");return}if(l<=d){p.flashNotification("Please specify a spool gross weight larger than Net Weight.");return}if(!await p.confirm("Are you sure you want to add that new spool?"))return;let s={id:X(),brand:r,material:n,color:i,isTranslucent:u,initialNetWeight:d,grossWeight:l,isRetired:!1,notes:a,remainingWeight:d},v=await w();v.push(s),await M(v),await S("New spool saved.")}async function Gt(e){let t=await $();g=t.find(n=>n.id===e);let r=t.filter(n=>n.id!==e);r.length<t.length&&(await G(r),await S("Print job deleted. You can re-add it if you want."))}async function Yt(e){if(!m(e)){y("No valid arguments.");return}let t=e.split("&"),r="",n="",i="",u=0,d=0,l="";for(let v of t){let f=v.split("=");f[1]=F(decodeURIComponent(f[1])),f[0]=="dt"?r=f[1]:f[0]=="ds"?n=f[1]:f[0]=="fl"?i=f[1]:f[0]=="wg"?u=Number(f[1]):f[0]=="dr"?d=Number(f[1]):f[0]=="nt"&&(l=f[1])}let a=(await w()).find(v=>v.id===i);if(!/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/.test(r)){p.flashNotification("Please specify a valid print job date.");return}if(typeof a>"u"){p.flashNotification("Please specify a valid filament spool.");return}if(u<=0||u>1e4){p.flashNotification("Please specify a print job weight between 1 and 10000.");return}if(d<0||d>1e3){p.flashNotification("Please specify a print job duration between 0 and 1000.");return}let h={id:X(),spoolId:i,date:r,description:n,filamentWeight:u,duration:d,notes:l,spoolBrand:a.brand,spoolMaterial:a.material,spoolColor:a.color,spoolIsTranslucent:a.isTranslucent,spoolIsRetired:a.isRetired},s=await $();s.push(h),await G(s),g=void 0,await S("New print job saved.")}async function zt(e){let t=await w(),r=t.find(i=>i.id===e);if(typeof r>"u"){y("Spool not found.");return}let n=F(await p.prompt("Spool notes:",r.notes));n!==r.notes&&(r.notes=n,await M(t),await S("Spool notes saved."))}async function Xt(e){let t=await w(),r=t.find(u=>u.id===e);if(typeof r>"u"){y("Spool not found.");return}let n=await p.prompt("Modify initial spool weight:",r.initialNetWeight.toString());if(typeof n>"u")return;let i=Number(n);if(isNaN(i)||i<=0||i>1e4){p.flashNotification("Please specify an initial spool weight between 1 and 10000.");return}i!==r.initialNetWeight&&(r.initialNetWeight=i,await M(t),await S("Initial spool weight saved."))}async function Zt(e){let t=await w(),r=t.find(u=>u.id===e);if(typeof r>"u"){y("Spool not found.");return}let n=await p.prompt("Modify gross spool weight:",r.grossWeight.toString());if(typeof n>"u")return;let i=Number(n);if(isNaN(i)||i<=0||i>1e4){p.flashNotification("Please specify a gross spool weight between 1 and 10000.");return}i!==r.grossWeight&&(r.grossWeight=i,await M(t),await S("Gross spool weight saved."))}var x;async function w(){if(x==null){let e=await W(J);y("Loading spools from "+e);let t="";for(let r of await b.listDocuments())r.name===e&&(t=Y(await b.readDocument(e)));if(m(t)){let r=await JSON.parse(t).spools;await er(r),x=r}else x=new Array;y("Loaded spools: "+x.length)}return x}async function M(e){x=e;let t=new Array;for(let n of e)t.push({id:n.id,brand:n.brand,material:n.material,color:n.color,isTranslucent:n.isTranslucent,grossWeight:n.grossWeight,initialNetWeight:n.initialNetWeight,isRetired:n.isRetired,notes:m(n.notes)?n.notes:""});let r=await JSON.stringify({spools:t});await b.writeDocument(await W(J),z(r))}var g,P;async function $(){if(P==null){let e=await W(O);y("Loading jobs from "+e);let t="";for(let r of await b.listDocuments())r.name===e&&(t=Y(await b.readDocument(e)));m(t)?(P=await JSON.parse(t).jobs,await tr(P)):P=new Array,y("Loaded jobs: "+P.length)}return P}async function er(e){let t=await $();e.forEach(r=>{(r.remainingWeight===void 0||r.remainingWeight===null)&&(r.remainingWeight=r.initialNetWeight),t.forEach(n=>{n.spoolId===r.id&&(r.remainingWeight-=n.filamentWeight)})})}async function tr(e){let t=await w();e.forEach(r=>{r.spoolBrand="",r.spoolMaterial="",r.spoolColor="",t.forEach(n=>{n.id===r.spoolId&&(r.spoolBrand=n.brand,r.spoolMaterial=n.material,r.spoolColor=n.color,r.spoolIsTranslucent=n.isTranslucent,r.spoolIsRetired=n.isRetired)})})}async function G(e){P=e;let t=new Array;for(let n of e)t.push({id:n.id,spoolId:n.spoolId,date:n.date,description:n.description,filamentWeight:n.filamentWeight,duration:n.duration,notes:m(n.notes)?n.notes:""});let r=await JSON.stringify({jobs:t});await b.writeDocument(await W(O),z(r)),x=null}function rr(){let e=new Date,t=e.getFullYear(),r=String(e.getMonth()+1).padStart(2,"0"),n=String(e.getDate()).padStart(2,"0");return`${t}-${r}-${n}`}function I(e){let t=Math.floor(e/60),r=e%60;if(t>0){let n=r<10?`0${r}`:`${r}`;return`${t}h ${n}m`}else return`${r}m`}function U(e){return m(e)?e.length<=27?e:`<span title="${e}">${e.substring(0,26)}&hellip;</span>`:""}async function W(e){return(await or()).pathPrefix+e}var j;async function or(){if(j==null){y("Reading settings");let e=await A.getConfig("silverSpooler",{});m(e.pathPrefix)?(e.pathPrefix.startsWith("/")&&(e.pathPrefix=e.pathPrefix.substring(1)),e.pathPrefix.endsWith("/")||(e.pathPrefix+="/")):e.pathPrefix="Files/SilverSpooler/",j=e}return j}function Y(e,t="utf-8"){return new TextDecoder(t).decode(e)}function z(e){return new TextEncoder().encode(e)}function m(e){return typeof e=="string"&&e.length>0}function F(e){let t={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","/":"&#x2F;"},r=/[&<>"'/]/ig;return e.replace(r,n=>t[n])}function X(){return crypto.randomUUID().replace(/[{}()-]/g,"")}function y(e){console.log("SilverSpooler: "+e)}var Z={renderSpools:q,renderPrintJobs:K,renderPrintStats:_,click:Q,refresh:V},ee={name:"silverspooler",functions:{renderSpools:{path:"silverspooler.ts:renderSpools",syscall:"silverspooler.renderSpools"},renderPrintJobs:{path:"silverspooler.ts:renderPrintJobs",syscall:"silverspooler.renderPrintJobs"},renderPrintStats:{path:"silverspooler.ts:renderPrintStats",syscall:"silverspooler.renderPrintStats"},click:{path:"silverspooler.ts:click",syscall:"silverspooler.click"},refresh:{path:"silverspooler.ts:refresh",syscall:"silverspooler.refresh",command:{name:"SilverSpooler: Refresh"}}},assets:{}},kr={manifest:ee,functionMapping:Z};B(Z,ee,self.postMessage);export{kr as plug};
